#!/usr/bin/env julia

include("lib/util.jl")
include("lib/ipmi.jl")
include("lib/fan.jl")
include("lib/disk.jl")
include("lib/sensors.jl")
include("lib/cooling.jl")

include("config.jl")

using .Util


function main(args)
    ## init

    ccall(:geteuid, Cint, ()) == 0 || error("Run this script as root.")

    @info "Checking fan limits"
    limits_changed = false
    data = IPMI.sensors()
    function check_limits!(fan, noncritical, critical, nonrecoverable)
        if data[fan].noncritical != noncritical ||
           data[fan].critical != critical ||
           data[fan].nonrecoverable != nonrecoverable
            IPMI.limits!(fan, noncritical, critical, nonrecoverable)
           return true
        end
        return false
    end
    # NOTE: RPM settings need to be divisible by 100, or they get rounded anyway
    # NOTE: MIN_DUTY should be chosen in terms of the lower bounds, ie. setting MIN_DUTY
    #       shouldn't make the RPM drop below any of the lower limits configured here
    ## Arctic F12 PWM CO
    for fan in ["FAN1", "FAN2", "FAN3", "FANA"]
        limits_changed |= check_limits!(fan, 200:1600, 200:1800, 100:2000)
    end
    ## boxed Intel cooler
    limits_changed |= check_limits!("FAN4", 700:3300, 600:3500, 500:3700)
    if limits_changed
        @info "Limits have changed"
        sleep(5)
    end

    if Fan.mode() != Fan.full
        @info "Enabling manual fan control"
        Fan.mode!(Fan.full)
        sleep(5)
    end

    @info "Resolving disk names"
    Disk.resolve!(PERIPHERAL_DISKS)
    Disk.resolve!(SYSTEM_DISKS)


    ## main

    @info "Entering main loop"
    current_peripheral_duty = 0
    current_system_duty = 0
    while true
        # control the peripheral fan
        let duty = Cooling.disk(PERIPHERAL_DISKS)
            duty = clamp(duty, MIN_DUTY, 100)
            if current_peripheral_duty != duty
                @debug "Setting peripheral fan to $(round(duty; digits=1))%"
                Fan.duty!(Fan.peripheral, duty)
                current_peripheral_duty = duty
            end
        end

        # control the system fan
        let duty = max(Cooling.disk(SYSTEM_DISKS), Cooling.cpu())
            duty = clamp(duty, MIN_DUTY, 100)
            if current_system_duty != duty
                @debug "Setting system fan to $(round(duty; digits=1))%"
                Fan.duty!(Fan.system, duty)
                current_system_duty = duty
            end
        end

        sleep(5)
    end
end

try
    main(ARGS)
catch ex
    Fan.mode!(Fan.optimal)
    rethrow(ex)
end
